{"version":3,"sources":["webpack:///./node_modules/gatsby/node_modules/core-js/modules/es6.math.sign.js","webpack:///./node_modules/topojson-client/src/identity.js","webpack:///./node_modules/topojson-client/src/transform.js","webpack:///./node_modules/topojson-client/src/feature.js","webpack:///./node_modules/topojson-client/src/reverse.js","webpack:///./node_modules/topojson-client/src/bisect.js","webpack:///./node_modules/d3-geo/src/math.js","webpack:///./node_modules/d3-geo/src/compose.js","webpack:///./node_modules/d3-geo/src/rotation.js","webpack:///./node_modules/d3-geo/src/noop.js","webpack:///./node_modules/d3-geo/src/clip/buffer.js","webpack:///./node_modules/d3-geo/src/pointEqual.js","webpack:///./node_modules/d3-geo/src/clip/rejoin.js","webpack:///./node_modules/d3-geo/src/adder.js","webpack:///./node_modules/d3-geo/src/cartesian.js","webpack:///./node_modules/d3-geo/src/polygonContains.js","webpack:///./node_modules/d3-array/src/ascending.js","webpack:///./node_modules/d3-array/src/bisect.js","webpack:///./node_modules/d3-array/src/bisector.js","webpack:///./node_modules/d3-array/src/cross.js","webpack:///./node_modules/d3-array/src/array.js","webpack:///./node_modules/d3-array/src/ticks.js","webpack:///./node_modules/d3-array/src/threshold/sturges.js","webpack:///./node_modules/d3-array/src/merge.js","webpack:///./node_modules/d3-array/src/zip.js","webpack:///./node_modules/d3-geo/src/clip/index.js","webpack:///./node_modules/d3-geo/src/clip/antimeridian.js","webpack:///./node_modules/d3-geo/src/circle.js","webpack:///./node_modules/d3-geo/src/clip/circle.js","webpack:///./node_modules/d3-geo/src/clip/rectangle.js","webpack:///./node_modules/d3-geo/src/clip/line.js","webpack:///./node_modules/d3-geo/src/identity.js","webpack:///./node_modules/d3-geo/src/transform.js","webpack:///./node_modules/d3-geo/src/stream.js","webpack:///./node_modules/d3-geo/src/path/bounds.js","webpack:///./node_modules/d3-geo/src/projection/fit.js","webpack:///./node_modules/d3-geo/src/projection/resample.js","webpack:///./node_modules/d3-geo/src/projection/index.js","webpack:///./node_modules/d3-geo/src/projection/mercator.js","webpack:///./node_modules/d3-geo/src/path/area.js","webpack:///./node_modules/d3-geo/src/path/centroid.js","webpack:///./node_modules/d3-geo/src/path/context.js","webpack:///./node_modules/d3-geo/src/path/measure.js","webpack:///./node_modules/d3-geo/src/path/string.js","webpack:///./node_modules/d3-geo/src/path/index.js","webpack:///./src/components/word-map/word-map.component.js","webpack:///./src/pages/map.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_math-sign.js"],"names":["$export","S","sign","x","transform","identity","x0","y0","kx","scale","ky","dx","translate","dy","input","i","j","n","length","output","Array","topology","o","id","bbox","properties","geometry","type","transformPoint","arcs","arc","points","pop","a","k","push","t","array","reverse","point","p","line","ring","polygon","map","coordinates","geometries","epsilon","pi","Math","PI","halfPi","quarterPi","tau","degrees","radians","abs","atan","atan2","cos","exp","ceil","log","floor","sin","pow","sqrt","tan","asin","compose","y","b","invert","rotationIdentity","lambda","phi","round","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","cosPhi","z","noop","lines","lineStart","lineEnd","rejoin","concat","shift","result","Intersection","other","entry","this","e","v","subject","clip","segments","forEach","segment","p0","p1","pointEqual","stream","sort","compareIntersection","startInside","start","current","isSubject","interpolate","Adder","reset","prototype","constructor","s","add","_add","temp","valueOf","adder","bv","av","cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","d","l","longitude","NaN","f","ascending","compare","slice","m","merged","arrays","sink","clipLine","ringBuffer","ringSink","polygonStarted","polygonStart","pointRing","ringStart","ringEnd","polygonEnd","sinPhi","normal","angle","winding","point0","lambda0","phi0","sinPhi0","cosPhi0","lambda1","sinPhi1","cosPhi1","point1","phi1","delta","absDelta","antimeridian","intersection","phiArc","polygonContains","sphere","pointVisible","pointLine","clean","ringSegments","filter","validSegment","_clean","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","direction","circleStream","radius","t0","t1","cosRadius","sinRadius","step","circleRadius","acos","cr","smallRadius","notHemisphere","visible","intersect","two","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","A","u","w","uu","t2","q","polar","q1","code","r","c0","v0","v00","point2","c","clipRectangle","x1","y1","a1","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","a0","b0","b1","polygonInside","cleanInside","max","min","ax","ay","transformer","methods","TransformStream","key","streamGeometry","streamGeometryType","hasOwnProperty","streamObjectType","Feature","object","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","closed","coordinate","Infinity","bounds","fit","projection","fitBounds","clipExtent","fitExtent","extent","h","cosMinDistance","delta2","project","resampleLineTo","depth","d2","phi2","lambda2","x2","y2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resampleNone","transformRadians","scaleTranslate","sx","sy","scaleTranslateRotate","alpha","cosAlpha","sinAlpha","ai","bi","ci","fi","projectAt","rotate","projectResample","projectTransform","projectRotateTransform","cache","cacheStream","theta","preclip","postclip","recenter","center","apply","resample","transformRotate","_","arguments","undefined","clipAngle","reflectX","reflectY","precision","fitSize","size","fitWidth","width","fitHeight","height","projectionMutator","mercatorRaw","reclip","forward","mercatorProjection","areaSum","areaRingSum","areaStream","areaRingStart","areaRingEnd","area","areaPointFirst","areaPoint","X0","Y0","Z0","X1","Y1","Z1","X2","Y2","Z2","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","PathContext","context","_context","_radius","pointRadius","_line","_point","closePath","moveTo","lineTo","lengthRing","lengthSum","lengthStream","lengthPointFirst","lengthPoint","PathString","_string","_circle","join","projectionStream","contextStream","path","measure","Country","datum","isDone","index","dataLength","name","classNames","geoPath","geoMercator","WIDTH","HEIGHT","className","stroke","strokeWidth","Countries","data","visited","split","toLowerCase","WordMap","countries","viewBox","visitedCountries","reduce","country","IndexPage","useState","mapData","setMapData","useEffect","wordData","objects","title","style","margin","module","exports"],"mappings":"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","file":"component---src-pages-map-js-5cbb20bc40ae5515707d.js","sourcesContent":["// 20.2.2.28 Math.sign(x)\nvar $export = require('./_export');\n\n$export($export.S, 'Math', { sign: require('./_math-sign') });\n","export default function (x) {\n  return x;\n}","import identity from \"./identity.js\";\nexport default function (transform) {\n  if (transform == null) return identity;\n  var x0,\n      y0,\n      kx = transform.scale[0],\n      ky = transform.scale[1],\n      dx = transform.translate[0],\n      dy = transform.translate[1];\n  return function (input, i) {\n    if (!i) x0 = y0 = 0;\n    var j = 2,\n        n = input.length,\n        output = new Array(n);\n    output[0] = (x0 += input[0]) * kx + dx;\n    output[1] = (y0 += input[1]) * ky + dy;\n\n    while (j < n) {\n      output[j] = input[j], ++j;\n    }\n\n    return output;\n  };\n}","import \"core-js/modules/es6.array.map\";\nimport reverse from \"./reverse.js\";\nimport transform from \"./transform.js\";\nexport default function (topology, o) {\n  if (typeof o === \"string\") o = topology.objects[o];\n  return o.type === \"GeometryCollection\" ? {\n    type: \"FeatureCollection\",\n    features: o.geometries.map(function (o) {\n      return feature(topology, o);\n    })\n  } : feature(topology, o);\n}\n\nfunction feature(topology, o) {\n  var id = o.id,\n      bbox = o.bbox,\n      properties = o.properties == null ? {} : o.properties,\n      geometry = object(topology, o);\n  return id == null && bbox == null ? {\n    type: \"Feature\",\n    properties: properties,\n    geometry: geometry\n  } : bbox == null ? {\n    type: \"Feature\",\n    id: id,\n    properties: properties,\n    geometry: geometry\n  } : {\n    type: \"Feature\",\n    id: id,\n    bbox: bbox,\n    properties: properties,\n    geometry: geometry\n  };\n}\n\nexport function object(topology, o) {\n  var transformPoint = transform(topology.transform),\n      arcs = topology.arcs;\n\n  function arc(i, points) {\n    if (points.length) points.pop();\n\n    for (var a = arcs[i < 0 ? ~i : i], k = 0, n = a.length; k < n; ++k) {\n      points.push(transformPoint(a[k], k));\n    }\n\n    if (i < 0) reverse(points, n);\n  }\n\n  function point(p) {\n    return transformPoint(p);\n  }\n\n  function line(arcs) {\n    var points = [];\n\n    for (var i = 0, n = arcs.length; i < n; ++i) {\n      arc(arcs[i], points);\n    }\n\n    if (points.length < 2) points.push(points[0]); // This should never happen per the specification.\n\n    return points;\n  }\n\n  function ring(arcs) {\n    var points = line(arcs);\n\n    while (points.length < 4) {\n      points.push(points[0]);\n    } // This may happen if an arc has only two points.\n\n\n    return points;\n  }\n\n  function polygon(arcs) {\n    return arcs.map(ring);\n  }\n\n  function geometry(o) {\n    var type = o.type,\n        coordinates;\n\n    switch (type) {\n      case \"GeometryCollection\":\n        return {\n          type: type,\n          geometries: o.geometries.map(geometry)\n        };\n\n      case \"Point\":\n        coordinates = point(o.coordinates);\n        break;\n\n      case \"MultiPoint\":\n        coordinates = o.coordinates.map(point);\n        break;\n\n      case \"LineString\":\n        coordinates = line(o.arcs);\n        break;\n\n      case \"MultiLineString\":\n        coordinates = o.arcs.map(line);\n        break;\n\n      case \"Polygon\":\n        coordinates = polygon(o.arcs);\n        break;\n\n      case \"MultiPolygon\":\n        coordinates = o.arcs.map(polygon);\n        break;\n\n      default:\n        return null;\n    }\n\n    return {\n      type: type,\n      coordinates: coordinates\n    };\n  }\n\n  return geometry(o);\n}","export default function (array, n) {\n  var t,\n      j = array.length,\n      i = j - n;\n\n  while (i < --j) {\n    t = array[i], array[i++] = array[j], array[j] = t;\n  }\n}","export default function (a, x) {\n  var lo = 0,\n      hi = a.length;\n\n  while (lo < hi) {\n    var mid = lo + hi >>> 1;\n    if (a[mid] < x) lo = mid + 1;else hi = mid;\n  }\n\n  return lo;\n}","import \"core-js/modules/es6.math.sign\";\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function (x) {\n  return x > 0 ? 1 : x < 0 ? -1 : 0;\n};\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}","export default function (a, b) {\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function (x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n  return compose;\n}","import compose from \"./compose.js\";\nimport { abs, asin, atan2, cos, degrees, pi, radians, sin, tau } from \"./math.js\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [abs(lambda) > pi ? lambda + Math.round(-lambda / tau) * tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma)) : rotationLambda(deltaLambda) : deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma) : rotationIdentity;\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function (lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), asin(k * cosDeltaGamma + y * sinDeltaGamma)];\n  }\n\n  rotation.invert = function (lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), asin(k * cosDeltaPhi - x * sinDeltaPhi)];\n  };\n\n  return rotation;\n}\n\nexport default function (rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function (coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}","export default function noop() {}","import noop from \"../noop.js\";\nexport default function () {\n  var lines = [],\n      line;\n  return {\n    point: function point(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function lineStart() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function rejoin() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function result() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}","import { abs, epsilon } from \"./math.js\";\nexport default function (a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}","import \"core-js/modules/es6.array.sort\";\nimport \"core-js/modules/es6.array.for-each\";\nimport pointEqual from \"../pointEqual.js\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n\n  this.e = entry; // is an entry?\n\n  this.v = false; // visited\n\n  this.n = this.p = null; // next & previous\n} // A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\n\n\nexport default function (segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n  segments.forEach(function (segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n,\n        p0 = segment[0],\n        p1 = segment[n],\n        x; // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n\n      for (i = 0; i < n; ++i) {\n        stream.point((p0 = segment[i])[0], p0[1]);\n      }\n\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n  if (!subject.length) return;\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n\n    while (current.v) {\n      if ((current = current.n) === start) return;\n    }\n\n    points = current.z;\n    stream.lineStart();\n\n    do {\n      current.v = current.o.v = true;\n\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n\n          for (i = points.length - 1; i >= 0; --i) {\n            stream.point((point = points[i])[0], point[1]);\n          }\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n\n        current = current.p;\n      }\n\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n\n  a.n = b = array[0];\n  b.p = a;\n}","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\nexport default function () {\n  return new Adder();\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function reset() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function add(y) {\n    _add(temp, y, this.t);\n\n    _add(this, temp.s, this.s);\n\n    if (this.s) this.t += temp.t;else this.s = temp.t;\n  },\n  valueOf: function valueOf() {\n    return this.s;\n  }\n};\nvar temp = new Adder();\n\nfunction _add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = a - av + (b - bv);\n}","import { asin, atan2, cos, sin, sqrt } from \"./math.js\";\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\nexport function cartesian(spherical) {\n  var lambda = spherical[0],\n      phi = spherical[1],\n      cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n} // TODO return a\n\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n} // TODO return d\n\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}","import adder from \"./adder.js\";\nimport { cartesian, cartesianCross, cartesianNormalizeInPlace } from \"./cartesian.js\";\nimport { abs, asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sign, sin, tau } from \"./math.js\";\nvar sum = adder();\n\nfunction longitude(point) {\n  if (abs(point[0]) <= pi) return point[0];else return sign(point[0]) * ((abs(point[0]) + pi) % tau - pi);\n}\n\nexport default function (polygon, point) {\n  var lambda = longitude(point),\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n  sum.reset();\n  if (sinPhi === 1) phi = halfPi + epsilon;else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = longitude(point0),\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = longitude(point1),\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta; // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  } // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ winding & 1;\n}","export default function (a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;","import ascending from \"./ascending\";\nexport default function (compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function left(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;else hi = mid;\n      }\n\n      return lo;\n    },\n    right: function right(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;else lo = mid + 1;\n      }\n\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function (d, x) {\n    return ascending(f(d), x);\n  };\n}","import { pair } from \"./pairs\";\nexport default function (values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}","import \"core-js/modules/es6.array.map\";\nvar array = Array.prototype;\nexport var slice = array.slice;\nexport var map = array.map;","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\nexport default function (start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n\n    while (++i < n) {\n      ticks[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n\n    while (++i < n) {\n      ticks[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) ticks.reverse();\n  return ticks;\n}\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0 ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power) : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;else if (error >= e5) step1 *= 5;else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}","export default function (values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}","export default function (arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) {\n    j += arrays[i].length;\n  }\n\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}","import transpose from \"./transpose\";\nexport default function () {\n  return transpose(arguments);\n}","import \"core-js/modules/es6.array.filter\";\nimport clipBuffer from \"./buffer.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport { epsilon, halfPi } from \"../math.js\";\nimport polygonContains from \"../polygonContains.js\";\nimport { merge } from \"d3-array\";\nexport default function (pointVisible, clipLine, interpolate, start) {\n  return function (sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function polygonEnd() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function sphere() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i,\n          n = ringSegments.length,\n          m,\n          segment,\n          point;\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n      if (!n) return; // No intersections.\n\n      if (clean & 1) {\n        segment = ringSegments[0];\n\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n\n          for (i = 0; i < m; ++i) {\n            sink.point((point = segment[i])[0], point[1]);\n          }\n\n          sink.lineEnd();\n        }\n\n        return;\n      } // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n\n\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n} // Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\n\n\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}","import clip from \"./index.js\";\nimport { abs, atan, cos, epsilon, halfPi, pi, sin } from \"../math.js\";\nexport default clip(function () {\n  return true;\n}, clipAntimeridianLine, clipAntimeridianInterpolate, [-pi, -halfPi]); // Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\n\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      _clean; // no intersections\n\n\n  return {\n    lineStart: function lineStart() {\n      stream.lineStart();\n      _clean = 1;\n    },\n    point: function point(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n\n      if (abs(delta - pi) < epsilon) {\n        // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        _clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) {\n        // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        _clean = 0;\n      }\n\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function lineEnd() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function clean() {\n      return 2 - _clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1) - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0)) / (cosPhi0 * cosPhi1 * sinLambda0Lambda1)) : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}","import { cartesian, cartesianNormalizeInPlace, spherical } from \"./cartesian.js\";\nimport constant from \"./constant.js\";\nimport { acos, cos, degrees, epsilon, radians, sin, tau } from \"./math.js\";\nimport { rotateRadians } from \"./rotation.js\"; // Generates a circle centered at [0°, 0°], with a given radius and precision.\n\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n} // Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\n\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function () {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {\n    point: point\n  };\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {\n      type: \"Polygon\",\n      coordinates: [ring]\n    };\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function (_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function (_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function (_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}","import { cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical } from \"../cartesian.js\";\nimport { circleStream } from \"../circle.js\";\nimport { abs, cos, epsilon, pi, radians, sqrt } from \"../math.js\";\nimport pointEqual from \"../pointEqual.js\";\nimport clip from \"./index.js\";\nexport default function (radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  } // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n\n\n  function clipLine(stream) {\n    var point0, // previous point\n    c0, // code for previous point\n    v0, // visibility of previous point\n    v00, // visibility of first point\n    _clean; // no intersections\n\n\n    return {\n      lineStart: function lineStart() {\n        v00 = v0 = false;\n        _clean = 1;\n      },\n      point: function point(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius ? v ? 0 : code(lambda, phi) : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart(); // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n\n        if (v !== v0) {\n          _clean = 0;\n\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t; // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            _clean = 0;\n\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function lineEnd() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function clean() {\n        return _clean | (v00 && v0) << 1;\n      }\n    };\n  } // Intersects the great circle between a and b with the clip circle.\n\n\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b); // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n\n    var n1 = [1, 0, 0],\n        // normal\n    n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0],\n        // cartesianDot(n1, n2),\n    determinant = n2n2 - n1n2 * n1n2; // Two polar points.\n\n    if (!determinant) return !two && a;\n    var c1 = cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B); // Solve |p(t)|^2 = 1.\n\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n    if (t2 < 0) return;\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n    if (!two) return q; // Two intersection points.\n\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z; // Check that the first point is between a and b.\n\n    if (meridian ? polar ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1) : phi0 <= q[1] && q[1] <= phi1 : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  } // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n\n\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}","import { abs, epsilon } from \"../math.js\";\nimport clipBuffer from \"./buffer.js\";\nimport clipLine from \"./line.js\";\nimport clipRejoin from \"./rejoin.js\";\nimport { merge } from \"d3-array\";\nvar clipMax = 1e9,\n    clipMin = -clipMax; // TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0,\n        a1 = 0;\n\n    if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoint(from, to) < 0 ^ direction > 0) {\n      do {\n        stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      } while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n  }\n\n  return function (stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__,\n        y__,\n        v__,\n        // first point\n    x_,\n        y_,\n        v_,\n        // previous point\n    first,\n        clean;\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n\n          if (a1 <= y1) {\n            if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding;\n          } else {\n            if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding;\n          }\n        }\n      }\n\n      return winding;\n    } // Buffer geometry within a polygon and then clip it en masse.\n\n\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n\n      if (cleanInside || visible) {\n        stream.polygonStart();\n\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n\n        stream.polygonEnd();\n      }\n\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    } // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n\n\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}","export default function (a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}","export default function (x) {\n  return x;\n}","export default function (methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\nexport function transformer(methods) {\n  return function (stream) {\n    var s = new TransformStream();\n\n    for (var key in methods) {\n      s[key] = methods[key];\n    }\n\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function point(x, y) {\n    this.stream.point(x, y);\n  },\n  sphere: function sphere() {\n    this.stream.sphere();\n  },\n  lineStart: function lineStart() {\n    this.stream.lineStart();\n  },\n  lineEnd: function lineEnd() {\n    this.stream.lineEnd();\n  },\n  polygonStart: function polygonStart() {\n    this.stream.polygonStart();\n  },\n  polygonEnd: function polygonEnd() {\n    this.stream.polygonEnd();\n  }\n};","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function Feature(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function FeatureCollection(object, stream) {\n    var features = object.features,\n        i = -1,\n        n = features.length;\n\n    while (++i < n) {\n      streamGeometry(features[i].geometry, stream);\n    }\n  }\n};\nvar streamGeometryType = {\n  Sphere: function Sphere(object, stream) {\n    stream.sphere();\n  },\n  Point: function Point(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function MultiPoint(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      object = coordinates[i], stream.point(object[0], object[1], object[2]);\n    }\n  },\n  LineString: function LineString(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function MultiLineString(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamLine(coordinates[i], stream, 0);\n    }\n  },\n  Polygon: function Polygon(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function MultiPolygon(object, stream) {\n    var coordinates = object.coordinates,\n        i = -1,\n        n = coordinates.length;\n\n    while (++i < n) {\n      streamPolygon(coordinates[i], stream);\n    }\n  },\n  GeometryCollection: function GeometryCollection(object, stream) {\n    var geometries = object.geometries,\n        i = -1,\n        n = geometries.length;\n\n    while (++i < n) {\n      streamGeometry(geometries[i], stream);\n    }\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1,\n      n = coordinates.length - closed,\n      coordinate;\n  stream.lineStart();\n\n  while (++i < n) {\n    coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  }\n\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1,\n      n = coordinates.length;\n  stream.polygonStart();\n\n  while (++i < n) {\n    streamLine(coordinates[i], stream, 1);\n  }\n\n  stream.polygonEnd();\n}\n\nexport default function (object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}","import noop from \"../noop.js\";\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function result() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;","import { default as geoStream } from \"../stream.js\";\nimport boundsStream from \"../path/bounds.js\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function (b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function (b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function (b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}","import { cartesian } from \"../cartesian.js\";\nimport { abs, asin, atan2, cos, epsilon, radians, sqrt } from \"../math.js\";\nimport { transformer } from \"../transform.js\";\nvar maxDepth = 16,\n    // maximum depth of subdivision\ncosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function (project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function point(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n      || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n      || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n        // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n\n  return function (stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n    lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function polygonStart() {\n        stream.polygonStart();\n        resampleStream.lineStart = ringStart;\n      },\n      polygonEnd: function polygonEnd() {\n        stream.polygonEnd();\n        resampleStream.lineStart = lineStart;\n      }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]),\n          p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}","import clipAntimeridian from \"../clip/antimeridian.js\";\nimport clipCircle from \"../clip/circle.js\";\nimport clipRectangle from \"../clip/rectangle.js\";\nimport compose from \"../compose.js\";\nimport identity from \"../identity.js\";\nimport { cos, degrees, radians, sin, sqrt } from \"../math.js\";\nimport { rotateRadians } from \"../rotation.js\";\nimport { transformer } from \"../transform.js\";\nimport { fitExtent, fitSize, fitWidth, fitHeight } from \"./fit.js\";\nimport resample from \"./resample.js\";\nvar transformRadians = transformer({\n  point: function point(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function point(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy, sx, sy) {\n  function transform(x, y) {\n    x *= sx;\n    y *= sy;\n    return [dx + k * x, dy - k * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [(x - dx) / k * sx, (dy - y) / k * sy];\n  };\n\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n\n  function transform(x, y) {\n    x *= sx;\n    y *= sy;\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n\n  transform.invert = function (x, y) {\n    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];\n  };\n\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function () {\n    return project;\n  })();\n}\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150,\n      // scale\n  x = 480,\n      y = 250,\n      // translate\n  lambda = 0,\n      phi = 0,\n      // center\n  deltaLambda = 0,\n      deltaPhi = 0,\n      deltaGamma = 0,\n      rotate,\n      // pre-rotate\n  alpha = 0,\n      // post-rotate angle\n  sx = 1,\n      // reflectX\n  sy = 1,\n      // reflectX\n  theta = null,\n      preclip = clipAntimeridian,\n      // pre-clip angle\n  x0 = null,\n      y0,\n      x1,\n      y1,\n      postclip = identity,\n      // post-clip extent\n  delta2 = 0.5,\n      // precision\n  projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function (stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function (_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function (_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function (_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function (_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function (_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function (_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function (_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function (_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function (_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.reflectX = function (_) {\n    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;\n  };\n\n  projection.reflectY = function (_) {\n    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;\n  };\n\n  projection.precision = function (_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function (extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function (size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function (width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function (height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], sx, sy, alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function () {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}","import { atan, exp, halfPi, log, pi, tan, tau } from \"../math.js\";\nimport rotation from \"../rotation.js\";\nimport projection from \"./index.js\";\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function (x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function () {\n  return mercatorProjection(mercatorRaw).scale(961 / tau);\n}\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null,\n      y0,\n      x1,\n      y1; // clip extent\n\n  m.scale = function (_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function (_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function (_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function (_) {\n    return arguments.length ? (_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]] : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}","import adder from \"../adder.js\";\nimport { abs } from \"../math.js\";\nimport noop from \"../noop.js\";\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function polygonStart() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function result() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;","import { sqrt } from \"../math.js\"; // TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function polygonStart() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function polygonEnd() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function result() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2] : Z1 ? [X1 / Z1, Y1 / Z1] : Z0 ? [X0 / Z0, Y0 / Z0] : [NaN, NaN];\n    X0 = Y0 = Z0 = X1 = Y1 = Z1 = X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;","import { tau } from \"../math.js\";\nimport noop from \"../noop.js\";\nexport default function PathContext(context) {\n  this._context = context;\n}\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function pointRadius(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._context.moveTo(x, y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._context.lineTo(x, y);\n\n          break;\n        }\n\n      default:\n        {\n          this._context.moveTo(x + this._radius, y);\n\n          this._context.arc(x, y, this._radius, 0, tau);\n\n          break;\n        }\n    }\n  },\n  result: noop\n};","import adder from \"../adder.js\";\nimport { sqrt } from \"../math.js\";\nimport noop from \"../noop.js\";\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\nvar lengthStream = {\n  point: noop,\n  lineStart: function lineStart() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function lineEnd() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function polygonStart() {\n    lengthRing = true;\n  },\n  polygonEnd: function polygonEnd() {\n    lengthRing = null;\n  },\n  result: function result() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;","export default function PathString() {\n  this._string = [];\n}\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function pointRadius(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function polygonStart() {\n    this._line = 0;\n  },\n  polygonEnd: function polygonEnd() {\n    this._line = NaN;\n  },\n  lineStart: function lineStart() {\n    this._point = 0;\n  },\n  lineEnd: function lineEnd() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function point(x, y) {\n    switch (this._point) {\n      case 0:\n        {\n          this._string.push(\"M\", x, \",\", y);\n\n          this._point = 1;\n          break;\n        }\n\n      case 1:\n        {\n          this._string.push(\"L\", x, \",\", y);\n\n          break;\n        }\n\n      default:\n        {\n          if (this._circle == null) this._circle = circle(this._radius);\n\n          this._string.push(\"M\", x, \",\", y, this._circle);\n\n          break;\n        }\n    }\n  },\n  result: function result() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n}","import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\nexport default function (projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n\n    return contextStream.result();\n  }\n\n  path.area = function (object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function (object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function (object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function (object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function (_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function (_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString()) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function (_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}","import React from 'react';\nimport { geoMercator, geoPath } from 'd3-geo';\nimport './word-map.css';\n\nconst WIDTH = 1140;\nconst HEIGHT = 600;\nconst SCALE = 150;\n\nconst projection = () => geoMercator().scale(SCALE).translate([ WIDTH / 2, HEIGHT / 2 ]);\n\nconst Country = ({ datum, index, dataLength, isDone, name }) => {\n  const classNames = isDone ? 'country visited' : 'country';\n  return (\n    <path\n      d={geoPath().projection(projection())(datum)}\n      id={name}\n      className={classNames}\n      stroke=\"#FFFFFF\"\n      strokeWidth={0.5}\n    />\n  );\n}\n\nconst Countries = ({ data = [], visited = {}}) => (\n  <g className=\"countries\">\n    {data.map((d, i) => {\n       const name = d.properties.name.split(' ').join('-').toLowerCase();\n       const isDone = visited[name];\n       return (\n         <Country\n           key={`country-${d.id || i}`}\n           datum={d}\n           index={i}\n           name={name}\n           dataLength={data.length}\n           isDone={isDone} />\n       )\n    })}\n  </g>\n);\n\nconst WordMap = ({ countries = [], visited = {}}) => (\n  <svg className=\"world-map-container\" width={WIDTH} height={HEIGHT} viewBox={`0 0 ${WIDTH} ${HEIGHT}`}>\n    <Countries data={countries} visited={visited} />\n  </svg>\n);\n\nexport default WordMap;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"gatsby\";\nimport SEO from \"../components/seo\";\nimport { feature } from 'topojson-client';\nimport WordMap from '../components/word-map/word-map.component';\nimport wordData from '../../assets/countries-110m.json';\nimport Navigation from \"../components/navigation/navigation.component\";\n\nconst visitedCountries = [\n  'mexico',\n  'ukraine',\n  'france',\n  'germany',\n  'united-states-of-america',\n  'czech-republic',\n  'poland',\n  'netherlands',\n].reduce((map, country) => ({...map, [country]: true }), {});\n\nconst IndexPage = () => {\n  const [mapData, setMapData] = useState([]);\n\n  useEffect(() => {\n    const isEmpty = mapData.length === 0;\n    if (isEmpty) {\n      setMapData(() => feature(wordData, wordData.objects.countries).features);\n    }\n  }, [mapData]);\n\n  return (\n      <>\n        <SEO title=\"My scratch map\" />\n        <section className=\"hero is-info is-bold is-fullheight\">\n          <div className=\"hero-head\">\n            <Navigation />\n          </div>\n          <div className=\"hero-body\">\n            <div className=\"is-hidden-touch\" style={{margin: '0 auto'}}>\n              <WordMap countries={mapData} visited={visitedCountries}/>\n            </div>\n            <div className=\"is-hidden-desktop has-text-centered\">\n              <h3 className=\"title\">Not supported</h3>\n              <h4 className=\"subtitle\">Unfortunately the scratch map is not supported in mobile or tablet devices</h4>\n              <button className=\"button is-light\">\n                <Link to=\"/\">Go to home</Link>\n              </button>\n            </div>\n          </div>\n        </section>\n      </>\n  );\n}\n\nexport default IndexPage;\n","// 20.2.2.28 Math.sign(x)\nmodule.exports = Math.sign || function sign(x) {\n  // eslint-disable-next-line no-self-compare\n  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;\n};\n"],"sourceRoot":""}