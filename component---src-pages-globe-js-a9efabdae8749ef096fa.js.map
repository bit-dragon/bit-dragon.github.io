{"version":3,"sources":["webpack:///./src/lib/globe-groups.js","webpack:///./src/lib/controls/OrbitControls.js","webpack:///./src/lib/animation.helpers.js","webpack:///./src/lib/camera.js","webpack:///./src/lib/Globe.js","webpack:///./src/pages/globe.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/navigation/navigation.component.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/layout.js"],"names":["THREE","GlobeGroups","this","globeRadius","globeSegments","globeWidth","globeHeight","groups","_proto","prototype","add","id","threeInstanceObject","name","getGroup","key","get","Helper","camera","console","log","convertLatLngToSphereCoords","latitude","longitude","phi","Math","PI","theta","x","cos","y","sin","z","convertFlatCoordsToSphereCoords","radius","convertLatLngToFlatCoords","round","getProjectedPosition","width","height","position","contentWidth","contentHeight","projected","clone","project","object","returnCameraAngles","targetAzimuthalAngle","targetPolarAngle","azimuthal","polar","getRandomNumberBetween","min","max","floor","random","OrbitControls","domElement","offset","quat","quatInverse","lastPosition","lastQuaternion","undefined","document","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","panSpeed","screenSpacePanning","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","MOUSE","MIDDLE","target0","position0","zoom0","zoom","getPolarAngle","spherical","getAzimuthalAngle","setPolarAngle","angle","forceUpdate","setAzimuthalAngle","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","Quaternion","setFromUnitVectors","up","inverse","sub","applyQuaternion","EPS","length","scale","panOffset","lookAt","thetaDelta","phiDelta","set","zoomChanged","distanceToSquared","dot","quaternion","setFromVector3","rotateLeft","sphericalDelta","makeSafe","setFromSpherical","multiplyScalar","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","window","onKeyDown","type","startEvent","endEvent","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY_PAN","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","rotateUp","v","panLeft","distance","objectMatrix","setFromMatrixColumn","panUp","crossVectors","pan","deltaX","deltaY","element","body","isPerspectiveCamera","targetDistance","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","warn","dollyIn","dollyScale","dollyOut","handleMouseDownPan","event","clientX","clientY","preventDefault","button","ctrlKey","metaKey","handleMouseDownRotate","handleMouseDownDolly","addEventListener","subVectors","handleMouseMoveRotate","handleMouseMoveDolly","handleMouseMovePan","stopPropagation","handleMouseWheel","keyCode","handleKeyDown","touches","pageX","pageY","handleTouchStartRotate","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchMoveRotate","handleTouchMoveDollyPan","Object","create","EventDispatcher","constructor","defineProperties","center","noZoom","value","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor","Camera","canvasEl","orbitControls","angles","current","transition","setupOrbitControllers","updatePosition","_this","Promise","resolve","_updateAngles","_animateNextLocation","t","_this$camera$transiti","progress","_this$camera$angles","_this$camera$angles$c","currentAzimuthal","currentPolar","_this$camera$angles$t","targetAzimuthal","targetPolar","azimuthalDifference","polarDifference","threeCamaraInstance","Globe","_ref","containerEl","scene","renderer","globeGroups","helper","shouldAnimate","currentGeo","_render","render","requestAnimationFrame","_animate","updateFromEntity","_ref2","geo","positionZ","canvas","antialias","opacity","setSize","_setupGlobe","textureCanvas","createElement","getContext","rect","texture","geometry","segments","material","map","transparent","mesh","globe","_addPoints","mergedGeometry","pingGeometry","color","_iterator","data","points","_isArray","Array","isArray","_i","Symbol","iterator","_ref3","next","done","point","pos","translate","merge","total","globePoints","_this2","_this$helper$convertL","lat","lng","_this$helper$returnCa","then","users","date","IndexPage","animationAreaEl","useRef","canvasRef","_useState","useState","globeInstance","setGlobeInstance","_useState2","dimensions","setDimensions","_useState3","userIndex","setUserIndex","_useState4","currentUser","setUser","useEffect","setTimeout","nextIndex","nextUser","innerHeight","innerWidth","globeInstancePre","assign","react_default","a","Fragment","seo","title","className","ref","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby_link__WEBPACK_IMPORTED_MODULE_1__","gatsby_link__WEBPACK_IMPORTED_MODULE_1___default","d","__webpack_exports__","loader","enqueue","React","createContext","gatsby__WEBPACK_IMPORTED_MODULE_1__","NavigationComponent","role","aria-label","to","aria-expanded","data-target","aria-hidden","ProdPageRenderer","location","pageResources","InternalPageRenderer","json","SEO","description","lang","meta","site","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","siteMetadata","react__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","htmlAttributes","titleTemplate","content","property","author","concat","defaultProps","Layout","children","_public_static_d_856328897_json__WEBPACK_IMPORTED_MODULE_0__","_navigation_navigation_component__WEBPACK_IMPORTED_MODULE_2__"],"mappings":"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","file":"component---src-pages-globe-js-a9efabdae8749ef096fa.js","sourcesContent":["export class GlobeGroups {\n    globeRadius = 200;\n    globeSegments = 64;\n    globeWidth = 4098 / 2;\n    globeHeight = 1968 / 2;\n    groups = {};\n\n    add(id, threeInstanceObject, name) {\n        this.groups[id] = threeInstanceObject;\n        this.groups[id].name = name;\n\n        return this.groups[id];\n    }\n\n    getGroup(id) {\n        return this.groups[id];\n    }\n\n    get radius() {\n        return this.globeRadius;\n    }\n\n    get segments() {\n        return this.globeSegments;\n    }\n\n    get width() {\n        return this.globeWidth;\n    }\n\n    get height() {\n        return this.globeHeight;\n    }\n}\n","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n * @author ScieCode / http://github.com/sciecode\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nexport const OrbitControl = (THREE) => {\n    THREE.OrbitControls = function(object, domElement) {\n        this.object = object;\n\n        this.domElement = domElement !== undefined ? domElement : document;\n\n        // Set to false to disable this control\n        this.enabled = true;\n\n        // \"target\" sets the location of focus, where the object orbits around\n        this.target = new THREE.Vector3();\n\n        // How far you can dolly in and out ( PerspectiveCamera only )\n        this.minDistance = 0;\n        this.maxDistance = Infinity;\n\n        // How far you can zoom in and out ( OrthographicCamera only )\n        this.minZoom = 0\n        this.maxZoom = Infinity;\n\n        // How far you can orbit vertically, upper and lower limits.\n        // Range is 0 to Math.PI radians.\n        this.minPolarAngle = 0; // radians\n        this.maxPolarAngle = Math.PI; // radians\n\n        // How far you can orbit horizontally, upper and lower limits.\n        // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n        this.minAzimuthAngle = -Infinity; // radians\n        this.maxAzimuthAngle = Infinity; // radians\n\n        // Set to true to enable damping (inertia)\n        // If damping is enabled, you must call controls.update() in your animation loop\n        this.enableDamping = false;\n        this.dampingFactor = 0.25;\n\n        // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n        // Set to false to disable zooming\n        this.enableZoom = true;\n        this.zoomSpeed = 1.0;\n\n        // Set to false to disable rotating\n        this.enableRotate = true;\n        this.rotateSpeed = 1.0;\n\n        // Set to false to disable panning\n        this.enablePan = true;\n        this.panSpeed = 1.0;\n        this.screenSpacePanning = false; // if true, pan in screen-space\n        this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n        // Set to true to automatically rotate around the target\n        // If auto-rotate is enabled, you must call controls.update() in your animation loop\n        this.autoRotate = false;\n        this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n        // Set to false to disable use of the keys\n        this.enableKeys = true;\n\n        // The four arrow keys\n        this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n        // Mouse buttons\n        this.mouseButtons = {\n            LEFT: THREE.MOUSE.LEFT,\n            MIDDLE: THREE.MOUSE.MIDDLE,\n            RIGHT: THREE.MOUSE.RIGHT,\n        };\n\n        // for reset\n        this.target0 = this.target.clone();\n        this.position0 = this.object.position.clone();\n        this.zoom0 = this.object.zoom;\n\n        //\n        // public methods\n        //\n\n        this.getPolarAngle = function() {\n            return spherical.phi\n        };\n\n        this.getAzimuthalAngle = function() {\n            return spherical.theta\n        };\n\n        this.setPolarAngle = function(angle) {\n            spherical.phi = angle\n            this.forceUpdate()\n        };\n\n        this.setAzimuthalAngle = function(angle) {\n            spherical.theta = angle\n            this.forceUpdate();\n        };\n\n        this.saveState = function() {\n            scope.target0.copy(scope.target);\n            scope.position0.copy(scope.object.position);\n            scope.zoom0 = scope.object.zoom;\n        }\n\n        this.reset = function() {\n            scope.target.copy(scope.target0);\n            scope.object.position.copy(scope.position0);\n            scope.object.zoom = scope.zoom0;\n\n            scope.object.updateProjectionMatrix();\n            scope.dispatchEvent(changeEvent);\n\n            scope.update();\n\n            state = STATE.NONE;\n        }\n\n        this.forceUpdate = (function() {\n            var offset = new THREE.Vector3()\n\n            // so camera.up is the orbit axis\n            var quat = new THREE.Quaternion().setFromUnitVectors(\n                object.up,\n                new THREE.Vector3(0, 1, 0)\n            )\n            var quatInverse = quat.clone().inverse()\n\n            var lastPosition = new THREE.Vector3()\n            var lastQuaternion = new THREE.Quaternion()\n\n            return function() {\n                var position = this.object.position\n\n                offset.copy(position).sub(this.target)\n\n                // rotate offset to \"y-axis-is-up\" space\n                offset.applyQuaternion(quat)\n\n                // restrict spherical.theta to be between desired limits\n                spherical.theta = Math.max(\n                    this.minAzimuthAngle,\n                    Math.min(this.maxAzimuthAngle, spherical.theta)\n                )\n\n                // restrict spherical.phi to be between desired limits\n                spherical.phi = Math.max(\n                    this.minPolarAngle,\n                    Math.min(this.maxPolarAngle, spherical.phi)\n                )\n\n                // restrict spherical.phi to be betwee EPS and PI-EPS\n                spherical.phi = Math.max(EPS, Math.min(Math.PI - EPS, spherical.phi))\n\n                var radius = offset.length() * scale\n\n                // restrict radius to be between desired limits\n                radius = Math.max(this.minDistance, Math.min(this.maxDistance, radius))\n\n                // move target to panned location\n                this.target.add(panOffset)\n\n                offset.x = radius * Math.sin(spherical.phi) * Math.sin(spherical.theta)\n                offset.y = radius * Math.cos(spherical.phi)\n                offset.z = radius * Math.sin(spherical.phi) * Math.cos(spherical.theta)\n\n                // rotate offset back to \"camera-up-vector-is-up\" space\n                offset.applyQuaternion(quatInverse)\n\n                position.copy(this.target).add(offset)\n\n                this.object.lookAt(this.target)\n\n                if (this.enableDamping === true) {\n                    spherical.thetaDelta *= 1 - this.dampingFactor\n                    spherical.phiDelta *= 1 - this.dampingFactor\n                } else {\n                    spherical.thetaDelta = 0\n                    spherical.phiDelta = 0\n                }\n\n                scale = 1\n                panOffset.set(0, 0, 0)\n\n                // update condition is:\n                // min(camera displacement, camera rotation in radians)^2 > EPS\n                // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n                if (\n                    zoomChanged ||\n                        lastPosition.distanceToSquared(this.object.position) > EPS ||\n                        8 * (1 - lastQuaternion.dot(this.object.quaternion)) > EPS\n                ) {\n                    lastPosition.copy(this.object.position)\n                    lastQuaternion.copy(this.object.quaternion)\n                    zoomChanged = false\n\n                    return true\n                }\n\n                return false\n            }\n        })()\n\n        // this method is exposed, but perhaps it would be better if we can make it private...\n        this.update = (function() {\n            var offset = new THREE.Vector3()\n\n            // so camera.up is the orbit axis\n            var quat = new THREE.Quaternion().setFromUnitVectors(\n                object.up,\n                new THREE.Vector3(0, 1, 0)\n            )\n            var quatInverse = quat.clone().inverse()\n\n            var lastPosition = new THREE.Vector3()\n            var lastQuaternion = new THREE.Quaternion()\n\n            return function update() {\n                var position = scope.object.position\n\n                offset.copy(position).sub(scope.target)\n\n                // rotate offset to \"y-axis-is-up\" space\n                offset.applyQuaternion(quat)\n\n                // angle from z-axis around y-axis\n                spherical.setFromVector3(offset)\n\n                if (scope.autoRotate && state === STATE.NONE) {\n                    rotateLeft(getAutoRotationAngle())\n                }\n\n                spherical.theta += sphericalDelta.theta\n                spherical.phi += sphericalDelta.phi\n\n                // restrict theta to be between desired limits\n                spherical.theta = Math.max(\n                    scope.minAzimuthAngle,\n                    Math.min(scope.maxAzimuthAngle, spherical.theta)\n                )\n\n                // restrict phi to be between desired limits\n                spherical.phi = Math.max(\n                    scope.minPolarAngle,\n                    Math.min(scope.maxPolarAngle, spherical.phi)\n                )\n\n                spherical.makeSafe()\n\n                spherical.radius *= scale\n\n                // restrict radius to be between desired limits\n                spherical.radius = Math.max(\n                    scope.minDistance,\n                    Math.min(scope.maxDistance, spherical.radius)\n                )\n\n                // move target to panned location\n                scope.target.add(panOffset)\n\n                offset.setFromSpherical(spherical)\n\n                // rotate offset back to \"camera-up-vector-is-up\" space\n                offset.applyQuaternion(quatInverse)\n\n                position.copy(scope.target).add(offset)\n\n                scope.object.lookAt(scope.target)\n\n                if (scope.enableDamping === true) {\n                    sphericalDelta.theta *= 1 - scope.dampingFactor\n                    sphericalDelta.phi *= 1 - scope.dampingFactor\n\n                    panOffset.multiplyScalar(1 - scope.dampingFactor)\n                } else {\n                    sphericalDelta.set(0, 0, 0)\n\n                    panOffset.set(0, 0, 0)\n                }\n\n                scale = 1\n\n                // update condition is:\n                // min(camera displacement, camera rotation in radians)^2 > EPS\n                // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n                if (\n                    zoomChanged ||\n                        lastPosition.distanceToSquared(scope.object.position) > EPS ||\n                        8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS\n                ) {\n                    scope.dispatchEvent(changeEvent)\n\n                    lastPosition.copy(scope.object.position)\n                    lastQuaternion.copy(scope.object.quaternion)\n                    zoomChanged = false\n\n                    return true\n                }\n\n                return false\n            }\n        })()\n\n        this.dispose = function() {\n            scope.domElement.removeEventListener('contextmenu', onContextMenu, false)\n            scope.domElement.removeEventListener('mousedown', onMouseDown, false)\n            scope.domElement.removeEventListener('wheel', onMouseWheel, false)\n\n            scope.domElement.removeEventListener('touchstart', onTouchStart, false)\n            scope.domElement.removeEventListener('touchend', onTouchEnd, false)\n            scope.domElement.removeEventListener('touchmove', onTouchMove, false)\n\n            document.removeEventListener('mousemove', onMouseMove, false)\n            document.removeEventListener('mouseup', onMouseUp, false)\n\n            window.removeEventListener('keydown', onKeyDown, false)\n\n            //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n        }\n\n        //\n        // internals\n        //\n\n        var scope = this\n\n        var changeEvent = { type: 'change' }\n        var startEvent = { type: 'start' }\n        var endEvent = { type: 'end' }\n\n        var STATE = {\n            NONE: -1,\n            ROTATE: 0,\n            DOLLY: 1,\n            PAN: 2,\n            TOUCH_ROTATE: 3,\n            TOUCH_DOLLY_PAN: 4,\n        }\n\n        var state = STATE.NONE\n\n        var EPS = 0.000001\n\n        // current position in spherical coordinates\n        var spherical = new THREE.Spherical()\n        var sphericalDelta = new THREE.Spherical()\n\n        var scale = 1\n        var panOffset = new THREE.Vector3()\n        var zoomChanged = false\n\n        var rotateStart = new THREE.Vector2()\n        var rotateEnd = new THREE.Vector2()\n        var rotateDelta = new THREE.Vector2()\n\n        var panStart = new THREE.Vector2()\n        var panEnd = new THREE.Vector2()\n        var panDelta = new THREE.Vector2()\n\n        var dollyStart = new THREE.Vector2()\n        var dollyEnd = new THREE.Vector2()\n        var dollyDelta = new THREE.Vector2()\n\n        function getAutoRotationAngle() {\n            return ((2 * Math.PI) / 60 / 60) * scope.autoRotateSpeed\n        }\n\n        function getZoomScale() {\n            return Math.pow(0.95, scope.zoomSpeed)\n        }\n\n        function rotateLeft(angle) {\n            sphericalDelta.theta -= angle\n        }\n\n        function rotateUp(angle) {\n            sphericalDelta.phi -= angle\n        }\n\n        var panLeft = (function() {\n            var v = new THREE.Vector3()\n\n            return function panLeft(distance, objectMatrix) {\n                v.setFromMatrixColumn(objectMatrix, 0) // get X column of objectMatrix\n                v.multiplyScalar(-distance)\n\n                panOffset.add(v)\n            }\n        })()\n\n        var panUp = (function() {\n            var v = new THREE.Vector3()\n\n            return function panUp(distance, objectMatrix) {\n                if (scope.screenSpacePanning === true) {\n                    v.setFromMatrixColumn(objectMatrix, 1)\n                } else {\n                    v.setFromMatrixColumn(objectMatrix, 0)\n                    v.crossVectors(scope.object.up, v)\n                }\n\n                v.multiplyScalar(distance)\n\n                panOffset.add(v)\n            }\n        })()\n\n        // deltaX and deltaY are in pixels; right and down are positive\n        var pan = (function() {\n            var offset = new THREE.Vector3()\n\n            return function pan(deltaX, deltaY) {\n                var element =\n                    scope.domElement === document ? scope.domElement.body : scope.domElement\n\n                if (scope.object.isPerspectiveCamera) {\n                    // perspective\n                    var position = scope.object.position\n                    offset.copy(position).sub(scope.target)\n                    var targetDistance = offset.length()\n\n                    // half of the fov is center to top of screen\n                    targetDistance *= Math.tan(((scope.object.fov / 2) * Math.PI) / 180.0)\n\n                    // we use only clientHeight here so aspect ratio does not distort speed\n                    panLeft(\n                        (2 * deltaX * targetDistance) / element.clientHeight,\n                        scope.object.matrix\n                    )\n                    panUp(\n                        (2 * deltaY * targetDistance) / element.clientHeight,\n                        scope.object.matrix\n                    )\n                } else if (scope.object.isOrthographicCamera) {\n                    // orthographic\n                    panLeft(\n                        (deltaX * (scope.object.right - scope.object.left)) /\n                            scope.object.zoom /\n                            element.clientWidth,\n                        scope.object.matrix\n                    )\n                    panUp(\n                        (deltaY * (scope.object.top - scope.object.bottom)) /\n                            scope.object.zoom /\n                            element.clientHeight,\n                        scope.object.matrix\n                    )\n                } else {\n                    // camera neither orthographic nor perspective\n                    console.warn(\n                        'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.'\n                    )\n                    scope.enablePan = false\n                }\n            }\n        })()\n\n        function dollyIn(dollyScale) {\n            if (scope.object.isPerspectiveCamera) {\n                scale /= dollyScale\n            } else if (scope.object.isOrthographicCamera) {\n                scope.object.zoom = Math.max(\n                    scope.minZoom,\n                    Math.min(scope.maxZoom, scope.object.zoom * dollyScale)\n                )\n                scope.object.updateProjectionMatrix()\n                zoomChanged = true\n            } else {\n                console.warn(\n                    'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.'\n                )\n                scope.enableZoom = false\n            }\n        }\n\n        function dollyOut(dollyScale) {\n            if (scope.object.isPerspectiveCamera) {\n                scale *= dollyScale\n            } else if (scope.object.isOrthographicCamera) {\n                scope.object.zoom = Math.max(\n                    scope.minZoom,\n                    Math.min(scope.maxZoom, scope.object.zoom / dollyScale)\n                )\n                scope.object.updateProjectionMatrix()\n                zoomChanged = true\n            } else {\n                console.warn(\n                    'WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.'\n                )\n                scope.enableZoom = false\n            }\n        }\n\n        //\n        // event callbacks - update the object state\n        //\n\n        function handleMouseDownRotate(event) {\n            //console.log( 'handleMouseDownRotate' );\n\n            rotateStart.set(event.clientX, event.clientY)\n        }\n\n        function handleMouseDownDolly(event) {\n            //console.log( 'handleMouseDownDolly' );\n\n            dollyStart.set(event.clientX, event.clientY)\n        }\n\n        function handleMouseDownPan(event) {\n            //console.log( 'handleMouseDownPan' );\n\n            panStart.set(event.clientX, event.clientY)\n        }\n\n        function handleMouseMoveRotate(event) {\n            //console.log( 'handleMouseMoveRotate' );\n\n            rotateEnd.set(event.clientX, event.clientY)\n\n            rotateDelta\n                .subVectors(rotateEnd, rotateStart)\n                .multiplyScalar(scope.rotateSpeed)\n\n            var element =\n                scope.domElement === document ? scope.domElement.body : scope.domElement\n\n            rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n\n            rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n\n            rotateStart.copy(rotateEnd)\n\n            scope.update()\n        }\n\n        function handleMouseMoveDolly(event) {\n            //console.log( 'handleMouseMoveDolly' );\n\n            dollyEnd.set(event.clientX, event.clientY)\n\n            dollyDelta.subVectors(dollyEnd, dollyStart)\n\n            if (dollyDelta.y > 0) {\n                dollyIn(getZoomScale())\n            } else if (dollyDelta.y < 0) {\n                dollyOut(getZoomScale())\n            }\n\n            dollyStart.copy(dollyEnd)\n\n            scope.update()\n        }\n\n        function handleMouseMovePan(event) {\n            //console.log( 'handleMouseMovePan' );\n\n            panEnd.set(event.clientX, event.clientY)\n\n            panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n\n            pan(panDelta.x, panDelta.y)\n\n            panStart.copy(panEnd)\n\n            scope.update()\n        }\n\n        function handleMouseUp(event) {\n            // console.log( 'handleMouseUp' );\n        }\n\n        function handleMouseWheel(event) {\n            // console.log( 'handleMouseWheel' );\n\n            if (event.deltaY < 0) {\n                dollyOut(getZoomScale())\n            } else if (event.deltaY > 0) {\n                dollyIn(getZoomScale())\n            }\n\n            scope.update()\n        }\n\n        function handleKeyDown(event) {\n            //console.log( 'handleKeyDown' );\n\n            switch (event.keyCode) {\n            case scope.keys.UP:\n                pan(0, scope.keyPanSpeed)\n                scope.update()\n                break\n\n            case scope.keys.BOTTOM:\n                pan(0, -scope.keyPanSpeed)\n                scope.update()\n                break\n\n            case scope.keys.LEFT:\n                pan(scope.keyPanSpeed, 0)\n                scope.update()\n                break\n\n            case scope.keys.RIGHT:\n                pan(-scope.keyPanSpeed, 0)\n                scope.update()\n                break\n            }\n        }\n\n        function handleTouchStartRotate(event) {\n            //console.log( 'handleTouchStartRotate' );\n\n            rotateStart.set(event.touches[0].pageX, event.touches[0].pageY)\n        }\n\n        function handleTouchStartDollyPan(event) {\n            //console.log( 'handleTouchStartDollyPan' );\n\n            if (scope.enableZoom) {\n                var dx = event.touches[0].pageX - event.touches[1].pageX\n                var dy = event.touches[0].pageY - event.touches[1].pageY\n\n                var distance = Math.sqrt(dx * dx + dy * dy)\n\n                dollyStart.set(0, distance)\n            }\n\n            if (scope.enablePan) {\n                var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX)\n                var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY)\n\n                panStart.set(x, y)\n            }\n        }\n\n        function handleTouchMoveRotate(event) {\n            //console.log( 'handleTouchMoveRotate' );\n\n            rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY)\n\n            rotateDelta\n                .subVectors(rotateEnd, rotateStart)\n                .multiplyScalar(scope.rotateSpeed)\n\n            var element =\n                scope.domElement === document ? scope.domElement.body : scope.domElement\n\n            rotateLeft((2 * Math.PI * rotateDelta.x) / element.clientHeight) // yes, height\n\n            rotateUp((2 * Math.PI * rotateDelta.y) / element.clientHeight)\n\n            rotateStart.copy(rotateEnd)\n\n            scope.update()\n        }\n\n        function handleTouchMoveDollyPan(event) {\n            //console.log( 'handleTouchMoveDollyPan' );\n\n            if (scope.enableZoom) {\n                var dx = event.touches[0].pageX - event.touches[1].pageX\n                var dy = event.touches[0].pageY - event.touches[1].pageY\n\n                var distance = Math.sqrt(dx * dx + dy * dy)\n\n                dollyEnd.set(0, distance)\n\n                dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed))\n\n                dollyIn(dollyDelta.y)\n\n                dollyStart.copy(dollyEnd)\n            }\n\n            if (scope.enablePan) {\n                var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX)\n                var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY)\n\n                panEnd.set(x, y)\n\n                panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed)\n\n                pan(panDelta.x, panDelta.y)\n\n                panStart.copy(panEnd)\n            }\n\n            scope.update()\n        }\n\n        function handleTouchEnd(event) {\n            //console.log( 'handleTouchEnd' );\n        }\n\n        //\n        // event handlers - FSM: listen for events and reset state\n        //\n\n        function onMouseDown(event) {\n            if (scope.enabled === false) return\n\n            event.preventDefault()\n\n            switch (event.button) {\n            case scope.mouseButtons.LEFT:\n                if (event.ctrlKey || event.metaKey) {\n                    if (scope.enablePan === false) return\n\n                    handleMouseDownPan(event)\n\n                    state = STATE.PAN\n                } else {\n                    if (scope.enableRotate === false) return\n\n                    handleMouseDownRotate(event)\n\n                    state = STATE.ROTATE\n                }\n\n                break\n\n            case scope.mouseButtons.MIDDLE:\n                if (scope.enableZoom === false) return\n\n                handleMouseDownDolly(event)\n\n                state = STATE.DOLLY\n\n                break\n\n            case scope.mouseButtons.RIGHT:\n                if (scope.enablePan === false) return\n\n                handleMouseDownPan(event)\n\n                state = STATE.PAN\n\n                break\n            }\n\n            if (state !== STATE.NONE) {\n                document.addEventListener('mousemove', onMouseMove, false)\n                document.addEventListener('mouseup', onMouseUp, false)\n\n                scope.dispatchEvent(startEvent)\n            }\n        }\n\n        function onMouseMove(event) {\n            if (scope.enabled === false) return\n\n            event.preventDefault()\n\n            switch (state) {\n            case STATE.ROTATE:\n                if (scope.enableRotate === false) return\n\n                handleMouseMoveRotate(event)\n\n                break\n\n            case STATE.DOLLY:\n                if (scope.enableZoom === false) return\n\n                handleMouseMoveDolly(event)\n\n                break\n\n            case STATE.PAN:\n                if (scope.enablePan === false) return\n\n                handleMouseMovePan(event)\n\n                break\n            }\n        }\n\n        function onMouseUp(event) {\n            if (scope.enabled === false) return\n\n            handleMouseUp(event)\n\n            document.removeEventListener('mousemove', onMouseMove, false)\n            document.removeEventListener('mouseup', onMouseUp, false)\n\n            scope.dispatchEvent(endEvent)\n\n            state = STATE.NONE\n        }\n\n        function onMouseWheel(event) {\n            if (\n                scope.enabled === false ||\n                    scope.enableZoom === false ||\n                    (state !== STATE.NONE && state !== STATE.ROTATE)\n            )\n                return\n\n            event.preventDefault()\n            event.stopPropagation()\n\n            scope.dispatchEvent(startEvent)\n\n            handleMouseWheel(event)\n\n            scope.dispatchEvent(endEvent)\n        }\n\n        function onKeyDown(event) {\n            if (\n                scope.enabled === false ||\n                    scope.enableKeys === false ||\n                    scope.enablePan === false\n            )\n                return\n\n            handleKeyDown(event)\n        }\n\n        function onTouchStart(event) {\n            if (scope.enabled === false) return\n\n            event.preventDefault()\n\n            switch (event.touches.length) {\n            case 1: // one-fingered touch: rotate\n                if (scope.enableRotate === false) return\n\n                handleTouchStartRotate(event)\n\n                state = STATE.TOUCH_ROTATE\n\n                break\n\n            case 2: // two-fingered touch: dolly-pan\n                if (scope.enableZoom === false && scope.enablePan === false) return\n\n                handleTouchStartDollyPan(event)\n\n                state = STATE.TOUCH_DOLLY_PAN\n\n                break\n\n            default:\n                state = STATE.NONE\n            }\n\n            if (state !== STATE.NONE) {\n                scope.dispatchEvent(startEvent)\n            }\n        }\n\n        function onTouchMove(event) {\n            if (scope.enabled === false) return\n\n            event.preventDefault()\n            event.stopPropagation()\n\n            switch (event.touches.length) {\n            case 1: // one-fingered touch: rotate\n                if (scope.enableRotate === false) return\n                if (state !== STATE.TOUCH_ROTATE) return // is this needed?\n\n                handleTouchMoveRotate(event)\n\n                break\n\n            case 2: // two-fingered touch: dolly-pan\n                if (scope.enableZoom === false && scope.enablePan === false) return\n                if (state !== STATE.TOUCH_DOLLY_PAN) return // is this needed?\n\n                handleTouchMoveDollyPan(event)\n\n                break\n\n            default:\n                state = STATE.NONE\n            }\n        }\n\n        function onTouchEnd(event) {\n            if (scope.enabled === false) return;\n\n            handleTouchEnd(event);\n\n            scope.dispatchEvent(endEvent);\n\n            state = STATE.NONE;\n        }\n\n        function onContextMenu(event) {\n            if (scope.enabled === false) return;\n\n            event.preventDefault();\n        }\n\n        //\n\n        scope.domElement.addEventListener('contextmenu', onContextMenu, false);\n\n        scope.domElement.addEventListener('mousedown', onMouseDown, false);\n        scope.domElement.addEventListener('wheel', onMouseWheel, false);\n\n        scope.domElement.addEventListener('touchstart', onTouchStart, false);\n        scope.domElement.addEventListener('touchend', onTouchEnd, false);\n        scope.domElement.addEventListener('touchmove', onTouchMove, false);\n\n        window.addEventListener('keydown', onKeyDown, false);\n\n        this.update();\n    };\n\n    THREE.OrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\n    THREE.OrbitControls.prototype.constructor = THREE.OrbitControls;\n\n    Object.defineProperties(THREE.OrbitControls.prototype, {\n        center: {\n            get: function() {\n                console.warn('THREE.OrbitControls: .center has been renamed to .target');\n                return this.target;\n            },\n        },\n\n        // backward compatibility\n\n        noZoom: {\n            get: function() {\n                console.warn(\n                    'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.'\n                );\n                return !this.enableZoom;\n            },\n\n            set: function(value) {\n                console.warn(\n                    'THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.'\n                );\n                this.enableZoom = !value;\n            },\n        },\n\n        noRotate: {\n            get: function() {\n                console.warn(\n                    'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.'\n                );\n                return !this.enableRotate;\n            },\n\n            set: function(value) {\n                console.warn(\n                    'THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.'\n                );\n                this.enableRotate = !value;\n            },\n        },\n\n        noPan: {\n            get: function() {\n                console.warn(\n                    'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.'\n                );\n                return !this.enablePan;\n            },\n\n            set: function(value) {\n                console.warn(\n                    'THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.'\n                );\n                this.enablePan = !value;\n            },\n        },\n\n        noKeys: {\n            get: function() {\n                console.warn(\n                    'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.'\n                );\n                return !this.enableKeys;\n            },\n\n            set: function(value) {\n                console.warn(\n                    'THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.'\n                );\n                this.enableKeys = !value;\n            },\n        },\n\n        staticMoving: {\n            get: function() {\n                console.warn(\n                    'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.'\n                );\n                return !this.enableDamping;\n            },\n\n            set: function(value) {\n                console.warn(\n                    'THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.'\n                );\n                this.enableDamping = !value;\n            },\n        },\n\n        dynamicDampingFactor: {\n            get: function() {\n                console.warn(\n                    'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.'\n                );\n                return this.dampingFactor;\n            },\n\n            set: function(value) {\n                console.warn(\n                    'THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.'\n                );\n                this.dampingFactor = value;\n            },\n        },\n    });\n\n};\n","import * as THREE from 'three.js';\n\nexport class Helper {\n    globeRadius = null;\n    globeWidth = null;\n    globeHeight = null;\n\n    constructor(camera, globeRadius, globeWidth, globeHeight) {\n        this.globeRadius = globeRadius;\n        this.globeWidth = globeWidth;\n        this.globeHeight = globeHeight;\n        this.camera = camera;\n        console.log('helper', this);\n    }\n\n    convertLatLngToSphereCoords(latitude, longitude) {\n        const phi = (latitude * Math.PI) / 180;\n        const theta = ((longitude - 180) * Math.PI) / 180;\n        const x = -(this.globeRadius + -1) * Math.cos(phi) * Math.cos(theta);\n        const y = (this.globeRadius + -1) * Math.sin(phi);\n        const z = (this.globeRadius + -1) * Math.cos(phi) * Math.sin(theta);\n        return new THREE.Vector3(x, y, z);\n    }\n\n    convertFlatCoordsToSphereCoords(x, y) {\n        // Calculate the relative 3d coordinates using Mercator projection relative to the radius of the globe.\n        // Convert latitude and longitude on the 90/180 degree axis.\n        let latitude = ((x - this.globeWidth) / this.globeWidth) * -180;\n        let longitude = ((y - this.globeHeight) / this.globeHeight) * -90;\n        latitude = (latitude * Math.PI) / 180; //(latitude / 180) * Math.PI\n        longitude = (longitude * Math.PI) / 180; //(longitude / 180) * Math.PI // Calculate the projected starting point\n        const radius = Math.cos(longitude) * this.globeRadius;\n        const targetX = Math.cos(latitude) * radius;\n        const targetY = Math.sin(longitude) * this.globeRadius;\n        const targetZ = Math.sin(latitude) * radius;\n        return {\n            x: targetX,\n            y: targetY,\n            z: targetZ,\n        };\n    }\n\n    convertLatLngToFlatCoords(latitude, longitude) {\n        // Reference: https://stackoverflow.com/questions/7019101/convert-pixel-location-to-latitude-longitude-vise-versa\n        const x = Math.round((longitude + 180) * (this.globeWidth / 360)) * 2;\n        const y = Math.round((-1 * latitude + 90) * (this.globeHeight / 180)) * 2;\n        return { x, y }\n    }\n\n    // Returns a 2d position based off of the canvas width and height to position popups on the globe.\n    getProjectedPosition(\n        width,\n        height,\n        position,\n        contentWidth,\n        contentHeight\n    ) {\n        position = position.clone();\n        var projected = position.project(this.camera.object);\n        return {\n            x: projected.x * width + width - contentWidth / 2,\n            y: -(projected.y * height) + height - contentHeight - 10, // -10 for a small offset\n        };\n    }\n\n    // Returns an object of the azimuthal and polar angles of a given a points x,y coord on the globe\n    returnCameraAngles(x, y) {\n        let targetAzimuthalAngle = ((x - this.globeWidth) / this.globeWidth) * Math.PI;\n        targetAzimuthalAngle = targetAzimuthalAngle + Math.PI / 2;\n        targetAzimuthalAngle += 0.3; // Add a small horizontal offset\n        let targetPolarAngle = (y / (this.globeHeight * 2)) * Math.PI;\n        targetPolarAngle += 0.1; // Add a small vertical offset\n        return {\n            azimuthal: targetAzimuthalAngle,\n            polar: targetPolarAngle,\n        };\n    }\n\n    getRandomNumberBetween(min, max) {\n        return Math.floor(Math.random() * (max - min + 1) + min);\n    }\n}\n\nexport const easeInOutCubic = (t) => {\n    return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n};\n","import * as THREE from 'three.js';\nimport { OrbitControl } from './controls/OrbitControls';\nimport {easeInOutCubic} from './animation.helpers';\n\nOrbitControl(THREE);\n\nexport class Camera {\n    camera = {\n        object: null,\n        orbitControls: null,\n        angles: {\n            current: {\n                azimuthal: null,\n                polar: null,\n            },\n            target: {\n                azimuthal: null,\n                polar: null,\n            },\n        },\n        transition: {\n            current: 0,\n            target: 30,\n        },\n    }\n\n    canvasEl = null;\n\n    constructor(canvasEl) {\n        this.canvasEl = canvasEl;\n    }\n\n    setupOrbitControllers() {\n        this.camera.orbitControls = new THREE.OrbitControls(this.camera.object, this.canvasEl);\n        this.camera.orbitControls.enableKeys = false;\n        this.camera.orbitControls.enablePan = false;\n        this.camera.orbitControls.enableZoom = false;\n        this.camera.orbitControls.enableDamping = false;\n        this.camera.orbitControls.enableRotate = false;\n        this.camera.object.position.z = -550;\n        this.camera.orbitControls.update();\n    }\n\n    updatePosition(azimuthal, polar) {\n        return new Promise((resolve) => {\n            this._updateAngles(azimuthal, polar);\n            this._animateNextLocation(resolve);\n            this.camera.orbitControls.update();\n        });\n    }\n\n    _updateAngles(azimuthal, polar) {\n        this.camera.angles.current.azimuthal = this.camera.orbitControls.getAzimuthalAngle();\n        this.camera.angles.current.polar = this.camera.orbitControls.getPolarAngle();\n        this.camera.angles.target.azimuthal = azimuthal;\n        this.camera.angles.target.polar = polar;\n    }\n\n    _animateNextLocation(resolve) {\n        const { current, target } = this.camera.transition;\n        if (current <= target) {\n            const progress = easeInOutCubic(current / target);\n            const {\n                current: { azimuthal: currentAzimuthal, polar: currentPolar },\n                target: { azimuthal: targetAzimuthal, polar: targetPolar },\n            } = this.camera.angles;\n\n            const azimuthalProgressDelta = (currentAzimuthal - targetAzimuthal) * progress;\n            const azimuthalDifference = currentAzimuthal - azimuthalProgressDelta;\n            this.camera.orbitControls.setAzimuthalAngle(azimuthalDifference);\n\n            const polarProgressDelta = (currentPolar - targetPolar) * progress;\n            const polarDifference = currentPolar - polarProgressDelta;\n            this.camera.orbitControls.setPolarAngle(polarDifference);\n\n            this.camera.transition.current++;\n        } else {\n            resolve();\n            this.camera.transition.current = 0;\n        } \n    }\n\n    get instance() {\n        return this.camera;\n    }\n\n    set object(threeCamaraInstance) {\n        this.camera.object = threeCamaraInstance;\n    }\n\n    get object() {\n        return this.camera.object;\n    }\n\n    set positionZ (position) {\n        if (this.camera.object) {\n            this.camera.object.position.z = position;\n        }\n    }\n}\n","import * as THREE from 'three.js';\nimport { GlobeGroups } from './globe-groups';\nimport { Camera } from './camera.js';\nimport data from './points.json';\nimport {Helper} from './animation.helpers';\n\nexport class Globe {\n    scene = null;\n    camera = null;\n    renderer = null;\n    containerEl = null;\n    canvasEl = null;\n    camera = null;\n    width = 1440;\n    height = 803;\n    scene = null;\n    globeGroups = null\n    helper = null;\n    globeRadius = 200;\n    globeWidth = 4098/2;\n    globeHeight = 1968/2;\n\n    shouldAnimate = false;\n    currentGeo = null;\n\n    constructor({containerEl, canvasEl, width, height}) {\n        // elements\n        this.width = width;\n        this.height = height;\n        this.containerEl = containerEl;\n        this.canvasEl = canvasEl;\n\n        // Init threejs basic objects\n        // This elements should be also part of the main module and inject\n        // when is required\n        this.camera = new Camera(canvasEl);\n        this.scene = new THREE.Scene();\n        this.camera.object = new THREE.PerspectiveCamera(45, this.width / this.height, 1, 4000);\n\n        this.camera.positionZ = 30000;\n\n        this.helper = new Helper(this.camera.object, this.globeRadius, this.globeWidth, this.globeHeight);\n\n        // Probably render could be something that we can reuse in a different leyers\n        // render should be a shared module accross different clases that implement\n        // any animation\n        this.renderer = new THREE.WebGLRenderer({\n            canvas: canvasEl,\n            antialias: true,\n            opacity: .8\n        });\n        this.renderer.setSize(this.width, this.height);\n\n        this._setupGlobe();\n        this.camera.setupOrbitControllers();\n        this._render();\n    }\n\n    _setupGlobe() {\n        this.globeGroups = new GlobeGroups();\n\n        const canvasSize = 128;\n        const textureCanvas = document.createElement('canvas');\n        textureCanvas.width = canvasSize;\n        textureCanvas.height = canvasSize;\n\n        const canvasContext = textureCanvas.getContext('2d');\n        canvasContext.rect(0, 0, canvasSize, canvasSize);\n        const texture = new THREE.Texture(textureCanvas);\n\n        const geometry = new THREE.SphereGeometry(\n            this.globeGroups.radius,\n            this.globeGroups.segments,\n            this.globeGroups.segments,\n        );\n        const material = new THREE.MeshBasicMaterial({\n            map: texture,\n            transparent: false,\n            opacity: 1,\n        });\n        const mesh = new THREE.Mesh(geometry, material);\n        const globe = this.globeGroups.add('globe', mesh, 'Globe');\n\n        this.scene.add(globe);\n\n        this._addPoints();\n    }\n\n    _addPoints() {\n        const mergedGeometry = new THREE.Geometry();\n        // The geometry that will contain all of our points.\n        const pingGeometry = new THREE.SphereGeometry(0.5, 5, 5);\n        // The material that our ping will be created from.\n        // const material = new THREE.MeshBasicMaterial({color: '#626177'});\n        const material = new THREE.MeshBasicMaterial({color: '#f0575d'});\n\n        for (let point of data.points) {\n            // Transform our latitude and longitude values to points on the sphere.\n            const pos = this.helper.convertFlatCoordsToSphereCoords(point.x, point.y);\n\n            if (pos.x && pos.y && pos.z) {\n                // Position ping item.\n                pingGeometry.translate(pos.x, pos.y, pos.z);\n                // Merge ping item onto our mergedGeometry object.\n                mergedGeometry.merge(pingGeometry);\n                // Reset ping item position.\n                pingGeometry.translate(-pos.x, -pos.y, -pos.z);\n            }\n        }\n\n        // We end up with 1 mesh to add to the scene rather than our (n) number of points.\n        const total = new THREE.Mesh(mergedGeometry, material);\n        const globePoints = this.globeGroups.add('globePoints', total, 'Globe Points');\n\n        this.scene.add(globePoints);\n    }\n\n    _animate() {\n        // verify if has to be animated and\n        // then call the orbitControls update method\n        if (this.shouldAnimate) {\n            const {x, y} = this.helper.convertLatLngToFlatCoords(this.currentGeo.lat, this.currentGeo.lng);\n            const {azimuthal, polar} = this.helper.returnCameraAngles(x, y);\n            this.camera.updatePosition(azimuthal, polar).then(() => {\n                console.log('Moved to', this.currentGeo.name);\n                this.shouldAnimate = false;\n            });\n        }\n    }\n\n    _render = () => {\n        this.renderer.render(this.scene, this.camera.object);\n        requestAnimationFrame(this._render);\n        this._animate();\n    }\n\n    updateFromEntity = ({geo}) => {\n        this.currentGeo = geo;\n        this.shouldAnimate = true;\n    }\n}\n","import React, {useEffect, useState, useRef} from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport {Globe} from '../lib/Globe.js';\n\n// This could be delivered by an endpoint\n// we can keep the geo structure and thing about the information that we need to hook to this\nconst users = [\n    {\n        id: 0,\n        name: 'John Yang',\n        geo: {\n            lat: 31.2304,\n            lng: 121.4737,\n            name: 'Shanghai, CN',\n        },\n        date: '01.23.2018',\n    },\n    {\n        id: 1,\n        name: 'Emma S.',\n        geo: {\n            lat: 55.6761,\n            lng: 12.5683,\n            name: 'Denmark, CPH',\n        },\n        date: '09.20.2018',\n    },\n    {\n        id: 2,\n        name: 'Spencer S.',\n        geo: {\n            lat: 34.0522,\n            lng: -118.2437,\n            name: 'Los Angeles, CA',\n        },\n        date: '12.25.2018',\n    },\n    {\n        id: 3,\n        name: 'Guadalajara HQ',\n        geo: {\n            lat: 20.659698,\n            lng: -103.349609,\n            name: 'Guadalajara',\n        },\n        date: '12.25.2018',\n    }\n];\n\nconst IndexPage = () => {\n    const animationAreaEl = useRef(null);\n    const canvasRef = useRef(null);\n    const [globeInstance, setGlobeInstance] = useState(null);\n    const [dimensions, setDimensions] = useState(null);\n    const [userIndex, setUserIndex] = useState(0);\n    const [currentUser, setUser] = useState(users[0]);\n\n    useEffect(() => {\n        if (globeInstance) {\n            setTimeout(() => {\n                const nextIndex = userIndex < users.length - 1 ? (userIndex + 1) : 0;\n                const nextUser = users[nextIndex];\n\n                setUserIndex(nextIndex);\n                setUser(nextUser);\n            }, 5000);\n        }\n    }, [globeInstance, currentUser]);\n\n    useEffect(() => {\n        if (!dimensions) {\n            setDimensions({\n                height: window.innerHeight,\n                width: window.innerWidth,\n            });\n        }\n    }, [dimensions]);\n\n    useEffect(() => {\n        if (dimensions && !globeInstance) {\n            const globeInstancePre = new Globe({\n                containerEl: animationAreaEl.current,\n                canvasEl: canvasRef.current,\n                ...dimensions,\n            });\n            globeInstancePre.updateFromEntity(currentUser);\n            setGlobeInstance(globeInstancePre);\n        }\n    }, [globeInstance, dimensions]);\n\n    useEffect(() => {\n        if (globeInstance) {\n            globeInstance.updateFromEntity(currentUser);\n        }\n    }, [globeInstance, currentUser]);\n\n    return (\n        <>\n          <SEO title=\"Animation\" />\n          <div className=\"globe\" ref={animationAreaEl}>\n            <canvas ref={canvasRef}></canvas>\n          </div>\n        </>\n    );\n};\n\nexport default IndexPage;\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from 'react';\nimport { Link } from \"gatsby\";\nimport './navigation.component.css';\n\nconst NavigationComponent = () => (\n    <nav className=\"custom-nav navbar is-primary\" role=\"navigation\" aria-label=\"main navigation\">\n        <div className=\"navbar-brand\">\n            <Link className=\"navbar-item is-italic has-text-black-bis has-text-weight-bold\" to=\"/\">bit-dragon</Link>\n\n            <a role=\"button\" className=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"false\" data-target=\"navbarBasicExample\">\n                <span aria-hidden=\"true\"/>\n                <span aria-hidden=\"true\"/>\n                <span aria-hidden=\"true\"/>\n            </a>\n        </div>\n\n        <div className=\"navbar-menu\">\n            <div className=\"navbar-start\">\n                <Link className=\"navbar-item\" to=\"/\">Home</Link>\n                <Link className=\"navbar-item is-hidden-mobile\" to=\"/map\">My scratch map</Link>\n                <Link className=\"navbar-item\" to=\"/curriculum\">Curriculum</Link>\n                <Link className=\"navbar-item is-hidden-mobile is-hidden-desktop\" to=\"/gallery-360\">360 Pictures</Link>\n            </div>\n        </div>\n\n    </nav>\n);\n\nexport default NavigationComponent;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useStaticQuery, graphql } from \"gatsby\";\n\nimport Navigation from \"./navigation/navigation.component\";\nimport \"./layout.css\";\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `);\n\n  return (\n    <>\n      <Navigation />\n      <div className=\"container is-fluid\">\n        <main>{children}</main>\n        <div className=\"hero-foot\">\n          <div className=\"content has-text-centered\">\n            <p>\n              bit-dragon - 2019\n            </p>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout;\n"],"sourceRoot":""}